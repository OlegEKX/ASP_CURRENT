// <auto-generated />
using System;
using ASP_TrafficRules.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ASP_TrafficRules.Db.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20240613212847_Test3")]
    partial class Test3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ASP_TrafficRules.Db.Models.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CorrectAnswerIndex")
                        .HasColumnType("int");

                    b.Property<string>("Explanation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd2f9cc1-b0ff-4af5-9e65-8a7b9faab576"),
                            CorrectAnswerIndex = 1,
                            Explanation = "Объяснение для вопроса 1",
                            Text = "Вопрос 1"
                        },
                        new
                        {
                            Id = new Guid("d4fe0285-36bf-4609-b002-fcca23ba576b"),
                            CorrectAnswerIndex = 2,
                            Explanation = "Объяснение для вопроса 2",
                            Text = "Вопрос 2"
                        });
                });

            modelBuilder.Entity("ASP_TrafficRules.Db.Models.QuestionOptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("QuestionOptions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7dbd7dc9-ac00-4cfb-950f-846422c94d5a"),
                            QuestionId = new Guid("bd2f9cc1-b0ff-4af5-9e65-8a7b9faab576"),
                            Text = "Ответ 1 на вопрос 1"
                        },
                        new
                        {
                            Id = new Guid("126a3f06-e786-4579-849a-92931dea5039"),
                            QuestionId = new Guid("bd2f9cc1-b0ff-4af5-9e65-8a7b9faab576"),
                            Text = "Ответ 1 на вопрос 1"
                        },
                        new
                        {
                            Id = new Guid("6cc97476-67de-4b8c-ba7b-f44de1d8a621"),
                            QuestionId = new Guid("bd2f9cc1-b0ff-4af5-9e65-8a7b9faab576"),
                            Text = "Ответ 1 на вопрос 1"
                        },
                        new
                        {
                            Id = new Guid("ab908e12-bbe0-4703-9b39-8aca024a2545"),
                            QuestionId = new Guid("bd2f9cc1-b0ff-4af5-9e65-8a7b9faab576"),
                            Text = "Ответ 1 на вопрос 1"
                        });
                });

            modelBuilder.Entity("ASP_TrafficRules.Db.Models.QuestionOptions", b =>
                {
                    b.HasOne("ASP_TrafficRules.Db.Models.Question", "Question")
                        .WithMany("QuestionOptions")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("ASP_TrafficRules.Db.Models.Question", b =>
                {
                    b.Navigation("QuestionOptions");
                });
#pragma warning restore 612, 618
        }
    }
}
